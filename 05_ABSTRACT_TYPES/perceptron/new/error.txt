==1303859== Memcheck, a memory error detector
==1303859== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1303859== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1303859== Command: ./a.out train.dat
==1303859== 
==1303859== Invalid read of size 1
==1303859==    at 0x48BDB3A: ____strtol_l_internal (strtol_l.c:292)
==1303859==    by 0x1092EB: atoi (stdlib.h:363)
==1303859==    by 0x1092EB: main (main.c:8)
==1303859==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1303859== 
==1303859== 
==1303859== Process terminating with default action of signal 11 (SIGSEGV)
==1303859==  Access not within mapped region at address 0x0
==1303859==    at 0x48BDB3A: ____strtol_l_internal (strtol_l.c:292)
==1303859==    by 0x1092EB: atoi (stdlib.h:363)
==1303859==    by 0x1092EB: main (main.c:8)
==1303859==  If you believe this happened as a result of a stack
==1303859==  overflow in your program's main thread (unlikely but
==1303859==  possible), you can try to increase the size of the
==1303859==  main thread stack using the --main-stacksize= flag.
==1303859==  The main thread stack size used in this run was 8388608.
==1303859== 
==1303859== HEAP SUMMARY:
==1303859==     in use at exit: 0 bytes in 0 blocks
==1303859==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==1303859== 
==1303859== All heap blocks were freed -- no leaks are possible
==1303859== 
==1303859== For lists of detected and suppressed errors, rerun with: -s
==1303859== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==1303885== Memcheck, a memory error detector
==1303885== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1303885== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1303885== Command: ./a.out train.dat 20
==1303885== 
load_data: loaded 20 examples
Enter x: 
Enter y: 
Prediction = 1
==1303885== 
==1303885== HEAP SUMMARY:
==1303885==     in use at exit: 504 bytes in 4 blocks
==1303885==   total heap usage: 12 allocs, 8 frees, 18,416 bytes allocated
==1303885== 
==1303885== 24 bytes in 1 blocks are definitely lost in loss record 1 of 4
==1303885==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1303885==    by 0x1094E5: new_Model (perceptron.c:43)
==1303885==    by 0x109327: main (main.c:16)
==1303885== 
==1303885== 160 bytes in 1 blocks are definitely lost in loss record 2 of 4
==1303885==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1303885==    by 0x1093FA: new_Data (perceptron.c:17)
==1303885==    by 0x1092F5: main (main.c:11)
==1303885== 
==1303885== 160 bytes in 1 blocks are definitely lost in loss record 3 of 4
==1303885==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1303885==    by 0x1093FA: new_Data (perceptron.c:17)
==1303885==    by 0x1092FF: main (main.c:12)
==1303885== 
==1303885== 160 bytes in 1 blocks are definitely lost in loss record 4 of 4
==1303885==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1303885==    by 0x1093FA: new_Data (perceptron.c:17)
==1303885==    by 0x109309: main (main.c:13)
==1303885== 
==1303885== LEAK SUMMARY:
==1303885==    definitely lost: 504 bytes in 4 blocks
==1303885==    indirectly lost: 0 bytes in 0 blocks
==1303885==      possibly lost: 0 bytes in 0 blocks
==1303885==    still reachable: 0 bytes in 0 blocks
==1303885==         suppressed: 0 bytes in 0 blocks
==1303885== 
==1303885== For lists of detected and suppressed errors, rerun with: -s
==1303885== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
